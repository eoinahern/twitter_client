apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def apikeyPropertiesFile = rootProject.file("twitterapi.properties")
def twitterApiProperties = new Properties()
twitterApiProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "twitter_client.eoinahern.ie.twitter_client"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "oauth_consumer_key", twitterApiProperties["oauth_consumer_key"])
        buildConfigField("String", "oauth_access_token", twitterApiProperties["oauth_access_token"])
        buildConfigField("String", "oauth_consumer_secret", twitterApiProperties["oauth_consumer_secret"])
        buildConfigField("String", "oauth_access_secret", twitterApiProperties["oauth_access_secret"])
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.APPCOMPAT_VERSION"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.CONSTRAINTLAYOUT_VERSION"
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.RECYCLERVIEW_VERSION"
    testImplementation "junit:junit:$rootProject.ext.JUNIT_VERSION"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.MOCKITO_VERSION"
    androidTestImplementation "androidx.test:runner:$rootProject.ext.TESTRUNNER_VERSION"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.ESPRESSOCORE_VERSION"

    implementation "androidx.room:room-runtime:$rootProject.ext.ROOM_VERSION"
    kapt "androidx.room:room-compiler:$rootProject.ext.ROOM_VERSION"
    implementation "androidx.room:room-rxjava2:$rootProject.ext.ROOM_VERSION"

    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.RETROFIT_VERSION"

    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.RXANDROID_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.RXJAVA_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.RETROFIT_VERSION"

    compileOnly 'javax.annotation:jsr250-api:1.0'
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android:$rootProject.ext.DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.DAGGER_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.DAGGER_VERSION"
    api 'com.google.guava:guava:26.0-android'

    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.ext.LIFECYCLE_VERSION"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.ext.LIFECYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$rootProject.ext.LIFECYCLE_VERSION"
    testImplementation "androidx.arch.core:core-testing:$rootProject.ext.LIFECYCLE_VERSION"



    implementation "com.google.code.gson:gson:$rootProject.ext.GSON_VERSION"
    implementation "me.zhanghai.android.materialprogressbar:library:$rootProject.ext.MATERIALPROGRESSBAR"

    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rootProject.ext.RXBINDING2_KOTLIN"
    implementation "com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:$rootProject.ext.RXBINDING_APPCOMPAT_KOTLIN"
    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.ext.THREETENABP_VERSION"
}

androidExtensions {
    experimental = true
}
